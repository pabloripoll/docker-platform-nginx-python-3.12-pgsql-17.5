# REMOVE COMMENTS WHEN COPY THIS FILE AND TRIM TRAILING WHITESPACES
# Ask the team for recommended values

# DOCKER VARIABLES FOR AUTOMATION
SUDO=sudo                                           # <- how local user executes system commands - leave it empty if not necessary ----------------------> #
DOCKER=sudo docker                                  # <- how local user executes Docker commands --------------------------------------------------------> #
DOCKER_COMPOSE=sudo docker compose                  # <- how local user executes "docker compose" or docker-compose command -----------------------------> #

# CONTAINERS BASE INFORMATION FOR BUILDING WITH docker-compose.yml
PROJECT_NAME="MY PROJECT NAME"                      # <- project name will be used for automation outputs -----------------------------------------------> #
PROJECT_LEAD=myproj                                 # <- abbreviation or acronym name as part of the container tag that is useful relationship naming ---> #
PROJECT_HOST="127.0.0.1"                            # <- machine hostname referrer - not necessary for this project -------------------------------------> #
PROJECT_CNET=mp-dev                                 # <- useful when a network is required for container connections between each other -----------------> #

# API - LOCAL
APIREST_PLTF=nginx-nodejs                           # <- platform assets directory's name ---------------------------------------------------------------> #
APIREST_IMGK=alpine3.22-nginx1.26-njs22             # <- real main image keys to manage automations for sharing resources -------------------------------> #
APIREST_PORT=4501                                   # <- local machine port opened for container service ------------------------------------------------> #
APIREST_BIND="../../../apirest"                     # <- path where application is binded from container to local ---------------------------------------> #
APIREST_CAAS=mp-apirest-dev                         # <- container name to build the service - it is important to set the environment in this variable --> #
APIREST_CAAS_USER=myproj                            # <- container's project directory user -------------------------------------------------------------> #
APIREST_CAAS_GROUP=myproj                           # <- container's project directory group ------------------------------------------------------------> #
APIREST_CAAS_MEM=512M                               # <- container's maximum RAM usage to apply by docker-compose ---------------------------------------> #
APIREST_CAAS_SWAP=1G                                # <- container's RAM swap space in storage executed by automation command ---------------------------> #
APIREST_GIT_SSH=~/.ssh/id_rsa	                    # <- container's project ssh key to connect to remote repository ------------------------------------> #
APIREST_GIT_HOST=github.org                         # <- container's project remote repository service --------------------------------------------------> #
APIREST_CAAS_BRANCH=develop                         # <- git branch that bonded directory has to be deployed by default ---------------------------------> #
APIREST_DOMAIN=my-project.localhost                 # <- api domain to watch Nginx domain dedicated access/error logs -----------------------------------> #

# DATABASE - LOCAL
DATABASE_PLTF=pgsql-17                              # <- platform assets directory's name ---------------------------------------------------------------> #
DATABASE_IMGK=alpine3.22-pgsql-17.5                 # <- real main image keys to manage automations for sharing resources -------------------------------> #
DATABASE_PORT=4500                                  # <- local machine port opened for container service ------------------------------------------------> #
DATABASE_CAAS=mp-pgsql-dev                          # <- container name to build the service - it is important to set the environment in this variable --> #
DATABASE_CAAS_MEM=512M                              # <- container's maximum RAM usage to apply by docker-compose ---------------------------------------> #
DATABASE_CAAS_SWAP=1G                               # <- container's RAM swap space in storage executed by automation command ---------------------------> #
DATABASE_ROOT="J4YPuJaieJ35gNAsk5U2usyphvnjAMRe"    # <- database root password -------------------------------------------------------------------------> #
DATABASE_NAME=myproj_local                          # <- database name ----------------------------------------------------------------------------------> #
DATABASE_USER=myproj                                # <- database user ----------------------------------------------------------------------------------> #
DATABASE_PASS="2wy0aD0ztCQaDwpOSQQor87s82q2eUS1"    # <- database password ------------------------------------------------------------------------------> #
DATABASE_PATH="/resources/database/"                # <- sql file's directory ---------------------------------------------------------------------------> #
DATABASE_INIT=pgsql-init.sql                        # <- init sql file ----------------------------------------------------------------------------------> #
DATABASE_BACK=pgsql-backup.sql                      # <- backup sql file --------------------------------------------------------------------------------> #
